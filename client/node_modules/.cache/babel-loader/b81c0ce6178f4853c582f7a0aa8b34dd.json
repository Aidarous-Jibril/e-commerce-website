{"ast":null,"code":"import { createSelector } from 'reselect'; //TWO TYPES OF SELECTOR FOR MEMOIZATION VALUE\n//this is input selector, it not uses state, it gives back a piece of state\n\nconst selectShop = state => state.shop;\n\nexport const selectShopCollections = createSelector([selectShop], shop => shop.collections); //Now collections data is an object of objects, to convert an array we need to use Object.keys so that our OverviewCosllection can render\n\nexport const selectCollectionsForPreview = createSelector([selectShopCollection], collections => Object.keys(collections).map(key => collections[key])); //Match collection.id to collection.url params\n//selectCollectionMatch func passed into SubCollection comp, and it's for nested routing\n\nexport const selectCollectionMatch = collectionUrlParam => createSelector([selectShopCollections], collections => collections[collectionUrlParam]);","map":{"version":3,"sources":["C:\\Users\\aidar\\Desktop\\e-commerce-site\\src\\redux\\reducers\\selectors-And-card.utils\\shopSelectors.js"],"names":["createSelector","selectShop","state","shop","selectShopCollections","collections","selectCollectionsForPreview","selectShopCollection","Object","keys","map","key","selectCollectionMatch","collectionUrlParam"],"mappings":"AACA,SAASA,cAAT,QAA+B,UAA/B,C,CAIA;AACA;;AACA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,qBAAqB,GAAIJ,cAAc,CAChD,CAACC,UAAD,CADgD,EAEhDE,IAAI,IAAIA,IAAI,CAACE,WAFmC,CAA7C,C,CAKP;;AACA,OAAO,MAAMC,2BAA2B,GAAGN,cAAc,CACvD,CAACO,oBAAD,CADuD,EAEvDF,WAAW,IAAIG,MAAM,CAACC,IAAP,CAAYJ,WAAZ,EAAyBK,GAAzB,CAA6BC,GAAG,IAAIN,WAAW,CAACM,GAAD,CAA/C,CAFwC,CAAlD,C,CAKP;AAEA;;AACA,OAAO,MAAMC,qBAAqB,GAAGC,kBAAkB,IACrDb,cAAc,CACZ,CAACI,qBAAD,CADY,EAEZC,WAAW,IAAIA,WAAW,CAACQ,kBAAD,CAFd,CADT","sourcesContent":["\r\nimport { createSelector } from 'reselect';\r\n\r\n\r\n\r\n//TWO TYPES OF SELECTOR FOR MEMOIZATION VALUE\r\n//this is input selector, it not uses state, it gives back a piece of state\r\nconst selectShop = state => state.shop;\r\n\r\nexport const selectShopCollections =  createSelector(\r\n    [selectShop],\r\n    shop => shop.collections\r\n);\r\n\r\n//Now collections data is an object of objects, to convert an array we need to use Object.keys so that our OverviewCosllection can render\r\nexport const selectCollectionsForPreview = createSelector(\r\n  [selectShopCollection],\r\n  collections => Object.keys(collections).map(key => collections[key])\r\n);\r\n\r\n//Match collection.id to collection.url params\r\n\r\n//selectCollectionMatch func passed into SubCollection comp, and it's for nested routing\r\nexport const selectCollectionMatch = collectionUrlParam =>\r\n  createSelector(\r\n    [selectShopCollections],\r\n    collections => collections[collectionUrlParam]\r\n  );\r\n\r\n"]},"metadata":{},"sourceType":"module"}