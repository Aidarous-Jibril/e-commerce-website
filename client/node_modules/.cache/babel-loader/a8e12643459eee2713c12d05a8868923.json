{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\aidar\\\\Desktop\\\\e-commerce-site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA_U6VXGT6O_oiTraqL2vNKAAaPJmIfu8Y\",\n  authDomain: \"e-commercedb.firebaseapp.com\",\n  databaseURL: \"https://e-commercedb.firebaseio.com\",\n  projectId: \"e-commercedb\",\n  storageBucket: \"\",\n  messagingSenderId: \"22477316848\",\n  appId: \"1:22477316848:web:e3446894ab8c5686ff1835\",\n  measurementId: \"G-GJJV503T5Y\"\n}; //create userProfile func and export \n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  //if user obj is null then exit\n  if (!userAuth) return; //query to the db about this user\n\n  const userRef = firestore.doc(\"users/\".concat(userAuth.uid)); //snapshot gives object data\n\n  const snapShot = await userRef.get(); //check if this user or doc exists to not create double, if not exists then create it\n\n  if (!snapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createdAt\n      }, additionalData));\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  } //return this for we need in our app some where\n\n\n  return userRef;\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore(); //set up google auth\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:\\Users\\aidar\\Desktop\\e-commerce-site\\src\\firebase\\Firebase.Utils.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":";;;;;;AAAC,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAGD,MAAMC,cAAc,GAAG;AACfC,EAAAA,MAAM,EAAE,yCADO;AAEfC,EAAAA,UAAU,EAAE,8BAFG;AAGfC,EAAAA,WAAW,EAAE,qCAHE;AAIfC,EAAAA,SAAS,EAAE,cAJI;AAKfC,EAAAA,aAAa,EAAE,EALA;AAMfC,EAAAA,iBAAiB,EAAE,aANJ;AAOfC,EAAAA,KAAK,EAAE,0CAPQ;AAQfC,EAAAA,aAAa,EAAE;AARA,CAAvB,C,CAYI;;AACA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AACzE;AACA,MAAI,CAACD,QAAL,EAAe,OAF0D,CAIzE;;AACA,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAAhB,CALyE,CAOzE;;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB,CARyE,CAUzE;;AACA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AAAA,UACVC,WADU,GACaT,QADb,CACVS,WADU;AAAA,UACGC,KADH,GACaV,QADb,CACGU,KADH;AAElB,UAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAI;AACF,YAAMV,OAAO,CAACW,GAAR;AACJJ,QAAAA,WADI;AAEJC,QAAAA,KAFI;AAGJC,QAAAA;AAHI,SAIDV,cAJC,EAAN;AAMD,KAPD,CAOE,OAAOa,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACD;AACF,GAxBsE,CA0BvE;;;AACA,SAAOf,OAAP;AACD,CA5BE,C,CAgCX;;AACAb,QAAQ,CAAC6B,aAAT,CAAuB5B,cAAvB;AAEA,OAAO,MAAM6B,IAAI,GAAG9B,QAAQ,CAAC8B,IAAT,EAAb;AACP,OAAO,MAAMhB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB,C,CAEP;;AACA,MAAMiB,QAAQ,GAAG,IAAI/B,QAAQ,CAAC8B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe/B,QAAf","sourcesContent":[" import firebase from 'firebase/app';\r\n import 'firebase/auth' ;\r\n import 'firebase/firestore' ;\r\n\r\n\r\nconst firebaseConfig = {\r\n        apiKey: \"AIzaSyA_U6VXGT6O_oiTraqL2vNKAAaPJmIfu8Y\",\r\n        authDomain: \"e-commercedb.firebaseapp.com\",\r\n        databaseURL: \"https://e-commercedb.firebaseio.com\",\r\n        projectId: \"e-commercedb\",\r\n        storageBucket: \"\",\r\n        messagingSenderId: \"22477316848\",\r\n        appId: \"1:22477316848:web:e3446894ab8c5686ff1835\",\r\n        measurementId: \"G-GJJV503T5Y\"\r\n\r\n    };\r\n\r\n    //create userProfile func and export \r\n    export const createUserProfileDocument = async (userAuth, additionalData) => {\r\n        //if user obj is null then exit\r\n        if (!userAuth) return;\r\n      \r\n        //query to the db about this user\r\n        const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n      \r\n        //snapshot gives object data\r\n        const snapShot = await userRef.get();\r\n         \r\n        //check if this user or doc exists to not create double, if not exists then create it\r\n        if (!snapShot.exists) {\r\n            const { displayName, email } = userAuth;\r\n            const createdAt = new Date();\r\n            try {\r\n              await userRef.set({\r\n                displayName,\r\n                email,\r\n                createdAt,\r\n                ...additionalData\r\n              });\r\n            } catch (error) {\r\n              console.log('error creating user', error.message);\r\n            }\r\n          }\r\n        \r\n          //return this for we need in our app some where\r\n          return userRef;\r\n        };\r\n\r\n\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\n//set up google auth\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}