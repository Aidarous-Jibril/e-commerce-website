{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aidar\\\\Desktop\\\\e-commerce-site\\\\client\\\\src\\\\components\\\\collections\\\\sub-Collection\\\\SubCollection.jsx\";\n\n/*\r\nimport React from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport './subCollection.styles.scss';\r\n\r\nimport CollectionItems from '../collection-preview-items/CollectionItems';\r\n//import Spinner from '../spinner/Spinner';\r\n\r\nimport { selectCollectionUrlMatch } from '../../../redux/shop/shopSelectors'\r\n\r\nconst SubCollection = ({ collection }) => {\r\n  const { title, items } = collection;\r\n\r\n/*  if (isCollectionsLoaded || collection === null) {\r\n    return <Spinner />\r\n  }\r\n  \r\nconsole.log(collection)\r\n    return (\r\n        <div className='sub-collection-page'>\r\n\r\n        <h2 className='title'>{title}</h2>\r\n        <div className='items'>\r\n            { items.map(item => (\r\n            <CollectionItems key={item.id} item={item} />\r\n            )) }\r\n        </div>\r\n        </div>\r\n    );\r\n    }\r\n\r\n\r\n//selectCollectionMatch is to match for nested routing\r\n  const mapStateToProps = (state, ownProps) => ({\r\n    collection: selectCollectionUrlMatch(ownProps.match.params.collectionId)(state),\r\n//    isCollectionsLoaded: selectIsCollectionsLoaded\r\n  });\r\nexport default connect(mapStateToProps)(SubCollection);\r\n\r\n*/\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport CollectionItems from '../collection-preview-items/CollectionItems';\nimport { selectCollectionUrlMatch } from '../../redux/shop/shop.selectors';\nimport { CollectionPageContainer, CollectionTitle, CollectionItemsContainer } from './collection.styles';\n\nconst SubCollection = ({\n  collection\n}) => {\n  const title = collection.title,\n        items = collection.items;\n  return React.createElement(CollectionPageContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(CollectionTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, title), React.createElement(CollectionItemsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, items.map(item => React.createElement(CollectionItem, {\n    key: item.id,\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectCollectionUrlMatch(ownProps.match.params.collectionId)(state)\n});\n\nexport default connect(mapStateToProps)(SubCollection);","map":{"version":3,"sources":["C:\\Users\\aidar\\Desktop\\e-commerce-site\\client\\src\\components\\collections\\sub-Collection\\SubCollection.jsx"],"names":["React","connect","CollectionItems","selectCollectionUrlMatch","CollectionPageContainer","CollectionTitle","CollectionItemsContainer","SubCollection","collection","title","items","map","item","id","mapStateToProps","state","ownProps","match","params","collectionId"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,eAAP,MAA4B,6CAA5B;AACA,SAASC,wBAAT,QAAyC,iCAAzC;AAEA,SACEC,uBADF,EAEEC,eAFF,EAGEC,wBAHF,QAIO,qBAJP;;AAMA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAAA,QAChCC,KADgC,GACfD,UADe,CAChCC,KADgC;AAAA,QACzBC,KADyB,GACfF,UADe,CACzBE,KADyB;AAExC,SACE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBD,KAAlB,CADF,EAEE,oBAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,CAACC,GAAN,CAAUC,IAAI,IACb,oBAAC,cAAD;AAAgB,IAAA,GAAG,EAAEA,IAAI,CAACC,EAA1B;AAA8B,IAAA,IAAI,EAAED,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAFF,CADF;AAUD,CAZD;;AAcA,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB;AAC5CR,EAAAA,UAAU,EAAEL,wBAAwB,CAACa,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsBC,YAAvB,CAAxB,CAA6DJ,KAA7D;AADgC,CAAtB,CAAxB;;AAIA,eAAed,OAAO,CAACa,eAAD,CAAP,CAAyBP,aAAzB,CAAf","sourcesContent":["/*\r\nimport React from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport './subCollection.styles.scss';\r\n\r\nimport CollectionItems from '../collection-preview-items/CollectionItems';\r\n//import Spinner from '../spinner/Spinner';\r\n\r\nimport { selectCollectionUrlMatch } from '../../../redux/shop/shopSelectors'\r\n\r\nconst SubCollection = ({ collection }) => {\r\n  const { title, items } = collection;\r\n\r\n/*  if (isCollectionsLoaded || collection === null) {\r\n    return <Spinner />\r\n  }\r\n  \r\nconsole.log(collection)\r\n    return (\r\n        <div className='sub-collection-page'>\r\n\r\n        <h2 className='title'>{title}</h2>\r\n        <div className='items'>\r\n            { items.map(item => (\r\n            <CollectionItems key={item.id} item={item} />\r\n            )) }\r\n        </div>\r\n        </div>\r\n    );\r\n    }\r\n\r\n\r\n//selectCollectionMatch is to match for nested routing\r\n  const mapStateToProps = (state, ownProps) => ({\r\n    collection: selectCollectionUrlMatch(ownProps.match.params.collectionId)(state),\r\n//    isCollectionsLoaded: selectIsCollectionsLoaded\r\n  });\r\nexport default connect(mapStateToProps)(SubCollection);\r\n\r\n*/\r\n\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CollectionItems from '../collection-preview-items/CollectionItems';\r\nimport { selectCollectionUrlMatch } from '../../redux/shop/shop.selectors';\r\n\r\nimport {\r\n  CollectionPageContainer,\r\n  CollectionTitle,\r\n  CollectionItemsContainer\r\n} from './collection.styles';\r\n\r\nconst SubCollection = ({ collection }) => {\r\n  const { title, items } = collection;\r\n  return (\r\n    <CollectionPageContainer>\r\n      <CollectionTitle>{title}</CollectionTitle>\r\n      <CollectionItemsContainer>\r\n        {items.map(item => (\r\n          <CollectionItem key={item.id} item={item} />\r\n        ))}\r\n      </CollectionItemsContainer>\r\n    </CollectionPageContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  collection: selectCollectionUrlMatch(ownProps.match.params.collectionId)(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(SubCollection);"]},"metadata":{},"sourceType":"module"}