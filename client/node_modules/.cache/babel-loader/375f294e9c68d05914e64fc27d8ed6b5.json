{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger'; //import thunk from 'redux-thunk';\n\nimport { persistStore } from 'redux-persist'; //this is for storage\n\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './reducers/rootReducer';\nimport rootSaga from './rootSaga';\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware]; //for deploying\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n} //extantiate store middleware\n\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares)); // saga middleware \n\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store); //export default (store, persistor);\n\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["C:\\Users\\aidar\\Desktop\\e-commerce-projects\\e-commerce-site\\client\\src\\redux\\store.js"],"names":["createStore","applyMiddleware","logger","persistStore","createSagaMiddleware","rootReducer","rootSaga","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CACA;;AACA,SAASC,YAAT,QAA6B,eAA7B,C,CAA+C;;AAC/C,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AACA,MAAMI,WAAW,GAAI,CAACD,cAAD,CAArB,C,CAEA;;AACA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AACxCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBV,MAAjB;AACD,C,CACH;;;AACA,OAAO,MAAMW,KAAK,GAAGb,WAAW,CAACK,WAAD,EAAcJ,eAAe,CAAC,GAAGO,WAAJ,CAA7B,CAAzB,C,CAEP;;AACAD,cAAc,CAACO,GAAf,CAAmBR,QAAnB;AAEA,OAAO,MAAMS,SAAS,GAAGZ,YAAY,CAACU,KAAD,CAA9B,C,CAIP;;AACA,eAAe;AAAEA,EAAAA,KAAF;AAASE,EAAAA;AAAT,CAAf","sourcesContent":["import {createStore, applyMiddleware} from 'redux';\r\nimport logger from 'redux-logger';\r\n//import thunk from 'redux-thunk';\r\nimport { persistStore } from 'redux-persist';  //this is for storage\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootReducer from './reducers/rootReducer';\r\nimport rootSaga from './rootSaga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middlewares =  [sagaMiddleware];\r\n\r\n//for deploying\r\nif (process.env.NODE_ENV === 'development') {\r\n    middlewares.push(logger);\r\n  }\r\n//extantiate store middleware\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\n// saga middleware \r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport const persistor = persistStore(store);\r\n\r\n\r\n\r\n//export default (store, persistor);\r\nexport default { store, persistor };"]},"metadata":{},"sourceType":"module"}