{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\aidar\\\\Desktop\\\\e-commerce-projects\\\\e-commerce-site\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\aidar\\\\Desktop\\\\e-commerce-projects\\\\e-commerce-site\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\aidar\\\\Desktop\\\\e-commerce-projects\\\\e-commerce-site\\\\client\\\\src\\\\components\\\\sign-in-And-sign-up\\\\sign-up\\\\SignUp.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/FormInput';\nimport CustomButton from '../../sharing-custom.button/CustomButton';\nimport './signUp.styles.scss';\nimport { signUpStart } from '../../../redux/user/userActions';\n\nfunction SignUp({\n  signUpStart\n}) {\n  //instead of having 4 different states we can simply have one state 'contact\n  const _useState = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1]; //pulling out values from user\n\n\n  const displayName = user.displayName,\n        email = user.email,\n        password = user.password,\n        confirmPassword = user.confirmPassword; //onChange,  //without spreading user '...user' will cause error\n\n  const onChange = e => {\n    setUser(_objectSpread({}, user, {\n      [e.target.name]: e.target.value\n    }));\n  }; //onSubmit\n\n\n  const onSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    } //Pass values as object into signUpStart action\n\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    }); //Reset form\n\n    setUser({\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"I do not have a account\"), React.createElement(\"span\", {\n    className: \"span\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: onChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: onChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: onChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: onChange,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"SIGN UP\")));\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:\\Users\\aidar\\Desktop\\e-commerce-projects\\e-commerce-site\\client\\src\\components\\sign-in-And-sign-up\\sign-up\\SignUp.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUp","displayName","email","password","confirmPassword","user","setUser","onChange","e","target","name","value","onSubmit","event","preventDefault","alert","mapDispatchToProps","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport  {connect} from 'react-redux';\r\nimport FormInput from '../form-input/FormInput'\r\nimport CustomButton from '../../sharing-custom.button/CustomButton'\r\nimport './signUp.styles.scss';\r\n\r\nimport { signUpStart } from '../../../redux/user/userActions';\r\n\r\n\r\nfunction SignUp ({signUpStart}) {\r\n //instead of having 4 different states we can simply have one state 'contact\r\n const [user, setUser] = useState({\r\n    displayName: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n});\r\n\r\n    //pulling out values from user\r\n    const {displayName, email, password, confirmPassword} = user\r\n\r\n    //onChange,  //without spreading user '...user' will cause error\r\n    const onChange = (e) => {\r\n      setUser({ ...user, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    //onSubmit\r\n    const onSubmit = async event => {\r\n      event.preventDefault();\r\n      \r\n      if (password !== confirmPassword) {\r\n        alert(\"passwords don't match\");\r\n        return;\r\n      }\r\n      //Pass values as object into signUpStart action\r\n      signUpStart({ displayName, email, password })\r\n      \r\n      //Reset form\r\n      setUser({\r\n        displayName: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n      })\r\n    };\r\n  \r\n\r\n  \r\n\r\n      return (\r\n        <div className='sign-up'>\r\n          <h2 className='title'>I do not have a account</h2>\r\n          <span className='span'>Sign up with your email and password</span>\r\n          <form className='sign-up-form' onSubmit={onSubmit}>\r\n            <FormInput\r\n              type='text'\r\n              name='displayName'\r\n              value={displayName}\r\n              onChange={onChange}\r\n              label='Display Name'\r\n              required\r\n            />\r\n            <FormInput\r\n              type='email'\r\n              name='email'\r\n              value={email}\r\n              onChange={onChange}\r\n              label='Email'\r\n              required\r\n            />\r\n            <FormInput\r\n              type='password'\r\n              name='password'\r\n              value={password}\r\n              onChange={onChange}\r\n              label='Password'\r\n              required\r\n            />\r\n            <FormInput\r\n              type='password'\r\n              name='confirmPassword'\r\n              value={confirmPassword}\r\n              onChange={onChange}\r\n              label='Confirm Password'\r\n              required\r\n            />\r\n            <CustomButton type='submit'>SIGN UP</CustomButton>\r\n          </form>\r\n        </div>\r\n      );\r\n    \r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch => ({\r\n    signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials))\r\n  })\r\n\r\n  export default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}