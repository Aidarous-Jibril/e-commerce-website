{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\aidar\\\\Desktop\\\\e-commerce-site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\aidar\\\\Desktop\\\\e-commerce-site\\\\src\\\\components\\\\sign-in-And-sign-up\\\\sign-in\\\\SignIn.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/FormInput';\nimport CustomButton from '../../sharing-custom.button/CustomButton';\nimport './signIn.styles.scss';\nimport { googleSignInStart, emailSignInStart } from '../../../redux/user/userActions';\n\nfunction SignIn({\n  googleSignInStart,\n  emailSignInStart\n}) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1]; //submit\n\n\n  const onSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"I already have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    onChange: e => setEmail(e.target.value),\n    value: email,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \" Sign in \"), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Sign in with Google\"))));\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:\\Users\\aidar\\Desktop\\e-commerce-site\\src\\components\\sign-in-And-sign-up\\sign-in\\SignIn.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","email","setEmail","password","setPassword","onSubmit","event","preventDefault","e","target","value","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAO,sBAAP;AAGA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,iCAApD;;AAGA,SAASC,MAAT,CAAiB;AAACF,EAAAA,iBAAD;AAAoBC,EAAAA;AAApB,CAAjB,EAAwD;AAAA,oBAC1BL,QAAQ,CAAC,EAAD,CADkB;AAAA;AAAA,QAC7CO,KAD6C;AAAA,QACtCC,QADsC;;AAAA,qBAEpBR,QAAQ,CAAC,EAAD,CAFY;AAAA;AAAA,QAE7CS,QAF6C;AAAA,QAEnCC,WAFmC,kBAIpD;;;AACD,QAAOC,QAAQ,GAAG,MAAMC,KAAN,IAAe;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACAR,IAAAA,gBAAgB,CAACE,KAAD,EAAQE,QAAR,CAAhB;AAED,GAJF;;AAOG,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFF,EAIE;AAAM,IAAA,QAAQ,EAAEE,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,QAAQ,EAAEG,CAAC,IAAIN,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAHzB;AAIE,IAAA,KAAK,EAAET,KAJT;AAKE,IAAA,KAAK,EAAC,OALR;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAEE,QAHT;AAIE,IAAA,QAAQ,EAAEK,CAAC,IAAIJ,WAAW,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAJ5B;AAKE,IAAA,KAAK,EAAC,UALR;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAiBE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAA4B,IAAA,OAAO,EAAEZ,iBAArC;AAAwD,IAAA,cAAc,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFF,CAjBF,CAJF,CADF;AAgCH;;AAED,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACtCd,EAAAA,iBAAiB,EAAG,MAAMc,QAAQ,CAACd,iBAAiB,EAAlB,CADI;AAEtCC,EAAAA,gBAAgB,EAAE,CAAEE,KAAF,EAASE,QAAT,KAAsBS,QAAQ,CAACb,gBAAgB,CAAC;AAACE,IAAAA,KAAD;AAAQE,IAAAA;AAAR,GAAD,CAAjB;AAFV,CAAL,CAAnC;;AAKA,eAAeR,OAAO,CAAC,IAAD,EAAOgB,kBAAP,CAAP,CAAmCX,MAAnC,CAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport FormInput from '../form-input/FormInput';\r\nimport CustomButton from '../../sharing-custom.button/CustomButton';\r\nimport './signIn.styles.scss';\r\n\r\n\r\nimport { googleSignInStart, emailSignInStart } from '../../../redux/user/userActions'\r\n\r\n\r\nfunction SignIn ({googleSignInStart, emailSignInStart}) {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n  \r\n    //submit\r\n   const  onSubmit = async event => {\r\n      event.preventDefault();\r\n      emailSignInStart(email, password)\r\n     \r\n    };\r\n  \r\n\r\n      return (\r\n        <div className='sign-in'>\r\n          <h2>I already have an account</h2>\r\n          <span>Sign in with your email and password</span>\r\n  \r\n          <form onSubmit={onSubmit}>\r\n            <FormInput\r\n              name='email'\r\n              type='email'\r\n              onChange={e => setEmail(e.target.value)}\r\n              value={email}\r\n              label='Email'\r\n              required\r\n            />\r\n            <FormInput\r\n              name='password'\r\n              type='password'\r\n              value={password}\r\n              onChange={e => setPassword(e.target.value)}\r\n              label='Password'\r\n              required\r\n            />\r\n            <div className='buttons'>\r\n              <CustomButton type='submit'> Sign in </CustomButton>\r\n              <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>\r\n                Sign in with Google\r\n              </CustomButton>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      );\r\n\r\n  }\r\n\r\n  const mapDispatchToProps = dispatch => ({\r\n    googleSignInStart : () => dispatch(googleSignInStart()),\r\n    emailSignInStart: ( email, password) => dispatch(emailSignInStart({email, password}))\r\n  })\r\n  \r\n  export default connect(null, mapDispatchToProps)( SignIn);"]},"metadata":{},"sourceType":"module"}