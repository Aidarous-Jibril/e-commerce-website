{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA_U6VXGT6O_oiTraqL2vNKAAaPJmIfu8Y\",\n  authDomain: \"e-commercedb.firebaseapp.com\",\n  databaseURL: \"https://e-commercedb.firebaseio.com\",\n  projectId: \"e-commercedb\",\n  storageBucket: \"\",\n  messagingSenderId: \"22477316848\",\n  appId: \"1:22477316848:web:e3446894ab8c5686ff1835\",\n  measurementId: \"G-GJJV503T5Y\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(\"users/\".concat(userAuth.uid));\n  const snapShot = await userRef.get(); //if user not exists then create the user\n\n  if (snapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        additionalData\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return userRef;\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore(); //set up google auth\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:\\Users\\aidar\\Desktop\\e-commerce-site\\src\\firebase\\Firebase.Utils.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","err","console","log","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAC,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAGD,MAAMC,cAAc,GAAG;AACfC,EAAAA,MAAM,EAAE,yCADO;AAEfC,EAAAA,UAAU,EAAE,8BAFG;AAGfC,EAAAA,WAAW,EAAE,qCAHE;AAIfC,EAAAA,SAAS,EAAE,cAJI;AAKfC,EAAAA,aAAa,EAAE,EALA;AAMfC,EAAAA,iBAAiB,EAAE,aANJ;AAOfC,EAAAA,KAAK,EAAE,0CAPQ;AAQfC,EAAAA,aAAa,EAAE;AARA,CAAvB;AAaI,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AACzE,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB,CALyE,CAOzE;;AACA,MAAGD,QAAQ,CAACE,MAAZ,EAAoB;AAAA,UACRC,WADQ,GACeT,QADf,CACRS,WADQ;AAAA,UACKC,KADL,GACeV,QADf,CACKU,KADL;AAEhB,UAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACA,YAAMV,OAAO,CAACW,GAAR,CAAY;AACdJ,QAAAA,WADc;AAEdC,QAAAA,KAFc;AAGdC,QAAAA,SAHc;AAIdV,QAAAA;AAJc,OAAZ,CAAN;AAMH,KAPD,CAOE,OAAOa,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ;;AACD,SAAOZ,OAAP;AACH,CAxBM,C,CA2BX;;AACAb,QAAQ,CAAC4B,aAAT,CAAuB3B,cAAvB;AAEA,OAAO,MAAM4B,IAAI,GAAG7B,QAAQ,CAAC6B,IAAT,EAAb;AACP,OAAO,MAAMf,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB,C,CAEP;;AACA,MAAMgB,QAAQ,GAAG,IAAI9B,QAAQ,CAAC6B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe9B,QAAf","sourcesContent":[" import firebase from 'firebase/app';\r\n import 'firebase/auth' ;\r\n import 'firebase/firestore' ;\r\n\r\n\r\nconst firebaseConfig = {\r\n        apiKey: \"AIzaSyA_U6VXGT6O_oiTraqL2vNKAAaPJmIfu8Y\",\r\n        authDomain: \"e-commercedb.firebaseapp.com\",\r\n        databaseURL: \"https://e-commercedb.firebaseio.com\",\r\n        projectId: \"e-commercedb\",\r\n        storageBucket: \"\",\r\n        messagingSenderId: \"22477316848\",\r\n        appId: \"1:22477316848:web:e3446894ab8c5686ff1835\",\r\n        measurementId: \"G-GJJV503T5Y\"\r\n\r\n    };\r\n\r\n    \r\n    export const createUserProfileDocument = async (userAuth, additionalData) => {\r\n        if(!userAuth) return;\r\n    \r\n        const userRef = firestore.doc(`users/${userAuth.uid}`)\r\n    \r\n        const snapShot = await userRef.get();\r\n    \r\n        //if user not exists then create the user\r\n        if(snapShot.exists) {\r\n            const { displayName, email } = userAuth ;\r\n            const createdAt = new Date();\r\n    \r\n            try {\r\n                await userRef.set({\r\n                    displayName,\r\n                    email,\r\n                    createdAt,\r\n                    additionalData \r\n                })\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        return userRef;\r\n    }\r\n\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\n//set up google auth\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}