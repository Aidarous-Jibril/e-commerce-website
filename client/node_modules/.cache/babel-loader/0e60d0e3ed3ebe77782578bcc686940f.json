{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aidar\\\\Desktop\\\\e-commerce-site\\\\src\\\\components\\\\pages\\\\shop\\\\ShopPage.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionOverview from '../../collections/collection-overview/CollectionOverview';\nimport SubCollection from '../../collections/sub-Collection/SubCollection';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../../firebase/Firebase.Utils';\nimport { collectionsFromFirebaseDB } from '../../../redux/actions/shopActions';\n\nconst ShopPage = ({\n  match,\n  updateCollections\n}) => {\n  //const [unSubscribeFromSnabshot, setUnSubscribeFromSnabshot] = useState(null);\n  const unSubscribeFromSnabshot = null;\n  useEffect(() => {\n    //fetch collection data from backend\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(snapShot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapShot);\n      updateCollections(collectionsMap); // eslint-disable-next-line no-console\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"shop-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"\".concat(match.path),\n    component: CollectionOverview,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"\".concat(match.path, \"/:collectionId\"),\n    component: SubCollection,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }));\n}; //send action direct from comp\n\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(collectionsFromFirebaseDB(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:\\Users\\aidar\\Desktop\\e-commerce-site\\src\\components\\pages\\shop\\ShopPage.jsx"],"names":["React","useEffect","useState","Route","connect","CollectionOverview","SubCollection","firestore","convertCollectionsSnapshotToMap","collectionsFromFirebaseDB","ShopPage","match","updateCollections","unSubscribeFromSnabshot","collectionRef","collection","onSnapshot","snapShot","collectionsMap","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,kBAAP,MAA+B,0DAA/B;AACA,OAAOC,aAAP,MAA0B,gDAA1B;AAEA,SAAQC,SAAR,EAAmBC,+BAAnB,QAA0D,kCAA1D;AAEA,SAASC,yBAAT,QAA0C,oCAA1C;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAiC;AAChD;AACA,QAAMC,uBAAuB,GAAG,IAAhC;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMa,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAAyBC,QAAQ,IAAI;AACnC,YAAMC,cAAc,GAAGV,+BAA+B,CAACS,QAAD,CAAtD;AACAL,MAAAA,iBAAiB,CAACM,cAAD,CAAjB,CAFmC,CAGnC;AACD,KAJD;AAKD,GATQ,EASN,EATM,CAAT;AAWA,SACA;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,YAAKP,KAAK,CAACQ,IAAX,CAAjB;AAAoC,IAAA,SAAS,EAAEd,kBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,YAAKM,KAAK,CAACQ,IAAX,mBAAX;AAA4C,IAAA,SAAS,EAAEb,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADA;AAMD,CApBD,C,CAsBA;;;AACA,MAAMc,kBAAkB,GAAGC,QAAQ,KAAK;AACtCT,EAAAA,iBAAiB,EAAEM,cAAc,IAAIG,QAAQ,CAACZ,yBAAyB,CAACS,cAAD,CAA1B;AADP,CAAL,CAAnC;;AAGA,eAAed,OAAO,CAAC,IAAD,EAAOgB,kBAAP,CAAP,CAAkCV,QAAlC,CAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CollectionOverview from '../../collections/collection-overview/CollectionOverview';\r\nimport SubCollection from '../../collections/sub-Collection/SubCollection';\r\n\r\nimport {firestore, convertCollectionsSnapshotToMap } from '../../../firebase/Firebase.Utils'\r\n\r\nimport { collectionsFromFirebaseDB } from '../../../redux/actions/shopActions'\r\n\r\n\r\nconst ShopPage = ({ match, updateCollections }) =>{\r\n  //const [unSubscribeFromSnabshot, setUnSubscribeFromSnabshot] = useState(null);\r\n  const unSubscribeFromSnabshot = null;\r\n  useEffect(() => {\r\n    //fetch collection data from backend\r\n    const collectionRef = firestore.collection('collections');\r\n  \r\n    collectionRef.onSnapshot(snapShot => {\r\n      const collectionsMap = convertCollectionsSnapshotToMap(snapShot); \r\n      updateCollections(collectionsMap) ;\r\n      // eslint-disable-next-line no-console\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n  <div className='shop-page'>\r\n    <Route exact path={`${match.path}`} component={CollectionOverview} />\r\n    <Route path={`${match.path}/:collectionId`} component={SubCollection} />\r\n  </div>\r\n);\r\n}\r\n\r\n//send action direct from comp\r\nconst mapDispatchToProps = dispatch => ({\r\n  updateCollections: collectionsMap => dispatch(collectionsFromFirebaseDB(collectionsMap))  \r\n})\r\nexport default connect(null, mapDispatchToProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}