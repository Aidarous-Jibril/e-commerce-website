{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aidar\\\\Desktop\\\\e-commerce-site\\\\src\\\\components\\\\pages\\\\shop\\\\ShopPage.jsx\";\nimport React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionOverview from '../../collections/collection-overview/CollectionOverview';\nimport SubCollection from '../../collections/sub-Collection/SubCollection';\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsCollectionLoading } from '../../../redux/reducers/selectors-And-card.utils/shopSelectors';\nimport { fetchCollectionsStartAsync } from '../../../redux/actions/shopActions';\n\nconst ShopPage = ({\n  match,\n  fetchCollectionsStartAsync,\n  isCollectionLoading\n}) => {\n  useEffect(() => {\n    fetchCollectionsStartAsync(); //eslint-disable-next-line\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"shop-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"\".concat(match.path),\n    component: CollectionOverview,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"\".concat(match.path, \"/:collectionId\"),\n    component: SubCollection,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionLoading: selectIsCollectionLoading\n}); //send action direct from comp\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:\\Users\\aidar\\Desktop\\e-commerce-site\\src\\components\\pages\\shop\\ShopPage.jsx"],"names":["React","useEffect","Route","connect","CollectionOverview","SubCollection","createStructuredSelector","selectIsCollectionLoading","fetchCollectionsStartAsync","ShopPage","match","isCollectionLoading","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,kBAAP,MAA+B,0DAA/B;AACA,OAAOC,aAAP,MAA0B,gDAA1B;AAEA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAAQC,yBAAR,QAAyC,gEAAzC;AACA,SAASC,0BAAT,QAA2C,oCAA3C;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASF,EAAAA,0BAAT;AAAqCG,EAAAA;AAArC,CAAD,KAA+D;AAC9EV,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,0BAA0B,GADZ,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,SACA;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,YAAKE,KAAK,CAACE,IAAX,CAAjB;AAAoC,IAAA,SAAS,EAAER,kBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,YAAKM,KAAK,CAACE,IAAX,mBAAX;AAA4C,IAAA,SAAS,EAAEP,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADA;AAMD,CAZD;;AAeA,MAAMQ,eAAe,GAAGP,wBAAwB,CAAE;AAChDK,EAAAA,mBAAmB,EAAEJ;AAD2B,CAAF,CAAhD,C,CAIA;;AACA,MAAMO,kBAAkB,GAAGC,QAAQ,KAAK;AACtCP,EAAAA,0BAA0B,EAAE,MAAMO,QAAQ,CAACP,0BAA0B,EAA3B;AADJ,CAAL,CAAnC;;AAGA,eAAeL,OAAO,CAACU,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CL,QAA7C,CAAf","sourcesContent":["import React, {useEffect } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CollectionOverview from '../../collections/collection-overview/CollectionOverview';\r\nimport SubCollection from '../../collections/sub-Collection/SubCollection';\r\n\r\nimport { createStructuredSelector } from 'reselect';\r\nimport {selectIsCollectionLoading } from '../../../redux/reducers/selectors-And-card.utils/shopSelectors'\r\nimport { fetchCollectionsStartAsync } from '../../../redux/actions/shopActions'\r\n\r\n\r\nconst ShopPage = ({ match, fetchCollectionsStartAsync, isCollectionLoading }) =>{\r\n  useEffect(() => {\r\n    fetchCollectionsStartAsync();\r\n    //eslint-disable-next-line\r\n  }, [])\r\n\r\n  return (\r\n  <div className='shop-page'>\r\n    <Route exact path={`${match.path}`} component={CollectionOverview} />\r\n    <Route path={`${match.path}/:collectionId`} component={SubCollection} />\r\n  </div>\r\n);\r\n}\r\n\r\n\r\nconst mapStateToProps = createStructuredSelector ({\r\n  isCollectionLoading: selectIsCollectionLoading\r\n})\r\n\r\n//send action direct from comp\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync()) \r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}