{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aidar\\\\Desktop\\\\e-commerce-site\\\\client\\\\src\\\\components\\\\pages\\\\shop\\\\ShopPage.jsx\";\nimport React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionOverview from '../../collections/collection-overview/CollectionOverview';\nimport SubCollection from '../../collections/sub-Collection/SubCollection';\nimport CollectionPageContainer from '../collection/collection.container';\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsCollectionsLoaded } from '../../../redux/shop/shopSelectors';\nimport { fetchCollectionsStart } from '../../../redux/shop/shopActions';\n\nconst ShopPage = ({\n  match,\n  fetchCollectionsStart,\n  isCollectionsLoaded\n}) => {\n  useEffect(() => {\n    fetchCollectionsStart(); //eslint-disable-next-line\n  }, []); //<Route path={`${match.path}/:collectionId`} component={SubCollection} isLoading={!isCollectionsLoaded}  />\n\n  return React.createElement(\"div\", {\n    className: \"shop-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"\".concat(match.path),\n    component: CollectionOverview,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"\".concat(match.path, \"/:collectionId\"),\n    component: CollectionPageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionsLoaded: selectIsCollectionsLoaded\n}); //send action direct from comp in useEffect\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:\\Users\\aidar\\Desktop\\e-commerce-site\\client\\src\\components\\pages\\shop\\ShopPage.jsx"],"names":["React","useEffect","Route","connect","CollectionOverview","SubCollection","CollectionPageContainer","createStructuredSelector","selectIsCollectionsLoaded","fetchCollectionsStart","ShopPage","match","isCollectionsLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,kBAAP,MAA+B,0DAA/B;AACA,OAAOC,aAAP,MAA0B,gDAA1B;AACA,OAAOC,uBAAP,MAAoC,oCAApC;AAGA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAAQC,yBAAR,QAAyC,mCAAzC;AACA,SAASC,qBAAT,QAAsC,iCAAtC;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASF,EAAAA,qBAAT;AAAgCG,EAAAA;AAAhC,CAAD,KAA0D;AACzEX,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,qBAAqB,GADP,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT,CADyE,CAMzE;;AACA,SACA;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,YAAKE,KAAK,CAACE,IAAX,CAAjB;AAAoC,IAAA,SAAS,EAAET,kBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AACM,IAAA,IAAI,YAAKO,KAAK,CAACE,IAAX,mBADV;AAEM,IAAA,SAAS,EAAEP,uBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADA;AASD,CAhBD;;AAmBA,MAAMQ,eAAe,GAAGP,wBAAwB,CAAE;AAChDK,EAAAA,mBAAmB,EAAEJ;AAD2B,CAAF,CAAhD,C,CAIA;;AACA,MAAMO,kBAAkB,GAAGC,QAAQ,KAAK;AACtCP,EAAAA,qBAAqB,EAAE,MAAMO,QAAQ,CAACP,qBAAqB,EAAtB;AADC,CAAL,CAAnC;;AAGA,eAAeN,OAAO,CAACW,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CL,QAA7C,CAAf","sourcesContent":["import React, {useEffect } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CollectionOverview from '../../collections/collection-overview/CollectionOverview';\r\nimport SubCollection from '../../collections/sub-Collection/SubCollection';\r\nimport CollectionPageContainer from '../collection/collection.container';\r\n \r\n\r\nimport { createStructuredSelector } from 'reselect';\r\nimport {selectIsCollectionsLoaded } from '../../../redux/shop/shopSelectors'\r\nimport { fetchCollectionsStart } from '../../../redux/shop/shopActions' \r\n\r\n\r\nconst ShopPage = ({ match, fetchCollectionsStart, isCollectionsLoaded }) =>{\r\n  useEffect(() => {\r\n    fetchCollectionsStart();\r\n    //eslint-disable-next-line\r\n  }, [])\r\n\r\n  //<Route path={`${match.path}/:collectionId`} component={SubCollection} isLoading={!isCollectionsLoaded}  />\r\n  return (\r\n  <div className='shop-page'>\r\n    <Route exact path={`${match.path}`} component={CollectionOverview}  />\r\n    <Route\r\n          path={`${match.path}/:collectionId`}\r\n          component={CollectionPageContainer}\r\n        />\r\n  </div>\r\n);\r\n}\r\n\r\n\r\nconst mapStateToProps = createStructuredSelector ({\r\n  isCollectionsLoaded: selectIsCollectionsLoaded\r\n})\r\n\r\n//send action direct from comp in useEffect\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart()) \r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}