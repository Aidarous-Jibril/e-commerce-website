{"ast":null,"code":"import { FETCH_COLLECTIONS_START, FETCH_COLLECTIONS_SUCCESS, FETCH_COLLECTIONS_FAILURE } from './types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/Firebase.Utils';\nimport { dispatch } from '../../../../../AppData/Local/Microsoft/TypeScript/3.6/node_modules/rxjs/internal/observable/pairs'; //Setting isFetching from falst to true when starting fetching \n\nexport const fetchCollectionsStart = () => ({\n  type: FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = error => ({\n  type: FETCH_COLLECTIONS_FAILURE,\n  payload: error\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["C:\\Users\\aidar\\Desktop\\e-commerce-site\\src\\redux\\actions\\shopActions.js"],"names":["FETCH_COLLECTIONS_START","FETCH_COLLECTIONS_SUCCESS","FETCH_COLLECTIONS_FAILURE","firestore","convertCollectionsSnapshotToMap","dispatch","fetchCollectionsStart","type","fetchCollectionsSuccess","collectionsMap","payload","fetchCollectionsFailure","error","fetchCollectionsStartAsync","collectionRef","collection","get","then","snapshot","catch","message"],"mappings":"AAAA,SACIA,uBADJ,EAEIC,yBAFJ,EAGIC,yBAHJ,QAIO,SAJP;AAOA,SAAQC,SAAR,EAAmBC,+BAAnB,QAA0D,+BAA1D;AACA,SAASC,QAAT,QAAyB,mGAAzB,C,CAGA;;AACA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AACxCC,EAAAA,IAAI,EAAEP;AADkC,CAAP,CAA9B;AAKP,OAAO,MAAMQ,uBAAuB,GAAGC,cAAc,KAAK;AAClDF,EAAAA,IAAI,EAAEN,yBAD4C;AAElDS,EAAAA,OAAO,EAAED;AAFyC,CAAL,CAA9C;AAKP,OAAO,MAAME,uBAAuB,GAAGC,KAAK,KAAK;AAC7CL,EAAAA,IAAI,EAAEL,yBADuC;AAE7CQ,EAAAA,OAAO,EAAEE;AAFoC,CAAL,CAArC;AAMP,OAAO,MAAMC,0BAA0B,GAAG,MAAM;AAC5C,SAAOR,QAAQ,IAAI;AACjB,UAAMS,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,aAArB,CAAtB;AACAV,IAAAA,QAAQ,CAACC,qBAAqB,EAAtB,CAAR;AAEAQ,IAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChB,YAAMT,cAAc,GAAGL,+BAA+B,CAACc,QAAD,CAAtD;AACAb,MAAAA,QAAQ,CAACG,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACD,KALH,EAMGU,KANH,CAMSP,KAAK,IAAIP,QAAQ,CAACM,uBAAuB,CAACC,KAAK,CAACQ,OAAP,CAAxB,CAN1B;AAOD,GAXD;AAYD,CAbI","sourcesContent":["import { \r\n    FETCH_COLLECTIONS_START, \r\n    FETCH_COLLECTIONS_SUCCESS, \r\n    FETCH_COLLECTIONS_FAILURE \r\n} from './types';\r\n\r\n\r\nimport {firestore, convertCollectionsSnapshotToMap } from '../../firebase/Firebase.Utils'\r\nimport { dispatch } from '../../../../../AppData/Local/Microsoft/TypeScript/3.6/node_modules/rxjs/internal/observable/pairs';\r\n\r\n\r\n//Setting isFetching from falst to true when starting fetching \r\nexport const fetchCollectionsStart = () => ({\r\n    type: FETCH_COLLECTIONS_START\r\n})\r\n\r\n\r\nexport const fetchCollectionsSuccess = collectionsMap => ({\r\n        type: FETCH_COLLECTIONS_SUCCESS,\r\n        payload: collectionsMap\r\n});\r\n\r\nexport const fetchCollectionsFailure = error => ({\r\n    type: FETCH_COLLECTIONS_FAILURE,\r\n    payload: error\r\n})\r\n\r\n\r\nexport const fetchCollectionsStartAsync = () => {\r\n    return dispatch => {\r\n      const collectionRef = firestore.collection('collections');\r\n      dispatch(fetchCollectionsStart());\r\n  \r\n      collectionRef\r\n        .get()\r\n        .then(snapshot => {\r\n          const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n          dispatch(fetchCollectionsSuccess(collectionsMap));\r\n        })\r\n        .catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n    };\r\n  };"]},"metadata":{},"sourceType":"module"}