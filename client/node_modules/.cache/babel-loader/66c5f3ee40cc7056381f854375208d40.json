{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/Firebase.Utils';\nimport { FETCH_COLLECTIONS_START, FETCH_COLLECTIONS_SUCCESS, FETCH_COLLECTIONS_FAILURE } from '../actions/types'; //fetching success\n\nexport const fetchCollectionsSuccess = collectionsMap => {\n  return {\n    type: FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionsMap\n  };\n}; //fetching failed\n\nexport const fetchCollectionsFailure = error => {\n  return {\n    type: FETCH_COLLECTIONS_FAILURE,\n    payload: error\n  };\n};\nexport function* fetchCollectionsStartAsync() {\n  yield console.log('im fired');\n  const collectionRef = firestore.collection('collections');\n  const snabShot = yield collectionRef.get();\n  const collectionsMap = yield call(convertCollectionsSnapshotToMap, snabShot); //yield put()\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(FETCH_COLLECTIONS_START, fetchCollectionsStartAsync);\n}","map":{"version":3,"sources":["C:\\Users\\aidar\\Desktop\\e-commerce-site\\src\\redux\\redux-saga\\shopSagas.js"],"names":["takeEvery","call","put","firestore","convertCollectionsSnapshotToMap","FETCH_COLLECTIONS_START","FETCH_COLLECTIONS_SUCCESS","FETCH_COLLECTIONS_FAILURE","fetchCollectionsSuccess","collectionsMap","type","payload","fetchCollectionsFailure","error","fetchCollectionsStartAsync","console","log","collectionRef","collection","snabShot","get","fetchCollectionsStart"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAoC,oBAApC;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA4D,+BAA5D;AAEA,SACIC,uBADJ,EAEIC,yBAFJ,EAGIC,yBAHJ,QAIO,kBAJP,C,CAOE;;AACA,OAAO,MAAMC,uBAAuB,GAAGC,cAAc,IAAI;AACvD,SAAO;AACHC,IAAAA,IAAI,EAAEJ,yBADH;AAEHK,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALQ,C,CAOT;;AACA,OAAO,MAAMG,uBAAuB,GAAGC,KAAK,IAAI;AAC5C,SAAO;AACHH,IAAAA,IAAI,EAAEH,yBADH;AAEHI,IAAAA,OAAO,EAAEE;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,UAAUC,0BAAV,GAAwC;AAC3C,QAAMC,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAN;AACA,QAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACA,QAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,QAAMX,cAAc,GAAG,MAAMR,IAAI,CAACG,+BAAD,EAAkCe,QAAlC,CAAjC,CAJ2C,CAK3C;AACH;AAED,OAAO,UAAUE,qBAAV,GAAiC;AACpC,QAAMrB,SAAS,CACXK,uBADW,EAEXS,0BAFW,CAAf;AAIH","sourcesContent":["import { takeEvery, call, put} from 'redux-saga/effects';\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap } from  '../../firebase/Firebase.Utils';\r\n\r\nimport { \r\n    FETCH_COLLECTIONS_START, \r\n    FETCH_COLLECTIONS_SUCCESS, \r\n    FETCH_COLLECTIONS_FAILURE \r\n} from '../actions/types';\r\n\r\n\r\n  //fetching success\r\n  export const fetchCollectionsSuccess = collectionsMap => {\r\n    return {\r\n        type: FETCH_COLLECTIONS_SUCCESS,\r\n        payload: collectionsMap\r\n    }\r\n};\r\n\r\n//fetching failed\r\nexport const fetchCollectionsFailure = error => {\r\n    return {\r\n        type: FETCH_COLLECTIONS_FAILURE,\r\n        payload: error\r\n    }\r\n};\r\n\r\nexport function* fetchCollectionsStartAsync () {\r\n    yield console.log('im fired');\r\n    const collectionRef = firestore.collection('collections');\r\n    const snabShot = yield collectionRef.get();\r\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snabShot)\r\n    //yield put()\r\n}\r\n\r\nexport function* fetchCollectionsStart(){\r\n    yield takeEvery(\r\n        FETCH_COLLECTIONS_START, \r\n        fetchCollectionsStartAsync\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}