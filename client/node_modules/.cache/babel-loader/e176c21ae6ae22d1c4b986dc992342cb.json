{"ast":null,"code":"import { createSelector } from 'reselect'; //TWO TYPES OF SELECTOR FOR MEMOIZATION VALUE\n//this is input selector, it not uses state, it gives back a piece of state\n\nconst selectShop = state => state.shop;\n\nexport const selectShopCollections = createSelector([selectShop], shop => shop.collections); //Now collections data is an object of objects, to convert an array we need to use Object.keys so that our OverviewCollection can render\n\nexport const selectCollectionsForPreview = createSelector([selectShopCollections], collections => Object.keys(collections).map(key => collections[key])); //selectCollectionMatch func which  passed into SubCollection takes collectionUrlParam parameter(collectionId) comes frm ShopPage->SubCollection comp, and it's for nested routing\n\nexport const selectCollectionUrlMatch = collectionUrlParam => createSelector([selectShopCollections], collections => collections ? collections[collectionUrlParam] : []); //If its Loading\n\nexport const selectIsCollectionLoading = createSelector([selectShop], shop => shop.isLoading); //This check if Collection is not loaded (null) or not. !!shop.collections returns false means null\n\nexport const selectIsCollectionsLoaded = createSelector([selectShop], shop => !!shop.collections);","map":{"version":3,"sources":["C:\\Users\\aidar\\Desktop\\e-commerce-site\\client\\src\\redux\\shop\\shopSelectors.js"],"names":["createSelector","selectShop","state","shop","selectShopCollections","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollectionUrlMatch","collectionUrlParam","selectIsCollectionLoading","isLoading","selectIsCollectionsLoaded"],"mappings":"AACA,SAASA,cAAT,QAA+B,UAA/B,C,CAIA;AACA;;AACA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,qBAAqB,GAAIJ,cAAc,CAChD,CAACC,UAAD,CADgD,EAEhDE,IAAI,IAAIA,IAAI,CAACE,WAFmC,CAA7C,C,CAKP;;AACA,OAAO,MAAMC,2BAA2B,GAAGN,cAAc,CACvD,CAACI,qBAAD,CADuD,EAEvDC,WAAW,IAAIE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6BC,GAAG,IAAIL,WAAW,CAACK,GAAD,CAA/C,CAFwC,CAAlD,C,CAMP;;AACE,OAAO,MAAMC,wBAAwB,GAAGC,kBAAkB,IAC1DZ,cAAc,CACZ,CAACI,qBAAD,CADY,EAEZC,WAAW,IAAKA,WAAW,GAAGA,WAAW,CAACO,kBAAD,CAAd,GAAqC,EAFpD,CADP,C,CAML;;AACF,OAAO,MAAMC,yBAAyB,GAAGb,cAAc,CACrD,CAACC,UAAD,CADqD,EAErDE,IAAI,IAAIA,IAAI,CAACW,SAFwC,CAAhD,C,CAKT;;AACE,OAAO,MAAMC,yBAAyB,GAAGf,cAAc,CACrD,CAACC,UAAD,CADqD,EAErDE,IAAI,IAAI,CAAC,CAACA,IAAI,CAACE,WAFsC,CAAhD","sourcesContent":["\r\nimport { createSelector } from 'reselect';\r\n\r\n\r\n\r\n//TWO TYPES OF SELECTOR FOR MEMOIZATION VALUE\r\n//this is input selector, it not uses state, it gives back a piece of state\r\nconst selectShop = state => state.shop;\r\n\r\nexport const selectShopCollections =  createSelector(\r\n    [selectShop],\r\n    shop => shop.collections\r\n);\r\n\r\n//Now collections data is an object of objects, to convert an array we need to use Object.keys so that our OverviewCollection can render\r\nexport const selectCollectionsForPreview = createSelector(\r\n  [selectShopCollections],\r\n  collections => Object.keys(collections).map(key => collections[key])\r\n);\r\n\r\n\r\n//selectCollectionMatch func which  passed into SubCollection takes collectionUrlParam parameter(collectionId) comes frm ShopPage->SubCollection comp, and it's for nested routing\r\n  export const selectCollectionUrlMatch = collectionUrlParam =>\r\n  createSelector(\r\n    [selectShopCollections],\r\n    collections => (collections ? collections[collectionUrlParam] : [])\r\n  );\r\n\r\n    //If its Loading\r\n  export const selectIsCollectionLoading = createSelector(\r\n    [selectShop],\r\n    shop => shop.isLoading\r\n  );\r\n\r\n//This check if Collection is not loaded (null) or not. !!shop.collections returns false means null\r\n  export const selectIsCollectionsLoaded = createSelector(\r\n    [selectShop],\r\n    shop => !!shop.collections\r\n  );\r\n  "]},"metadata":{},"sourceType":"module"}