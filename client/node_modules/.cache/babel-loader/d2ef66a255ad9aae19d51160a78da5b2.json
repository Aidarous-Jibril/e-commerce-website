{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\aidar\\\\Desktop\\\\e-commerce-site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\aidar\\\\Desktop\\\\e-commerce-site\\\\src\\\\components\\\\pages\\\\shop\\\\ShopPage.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionOverview from '../../collections/collection-overview/CollectionOverview';\nimport SubCollection from '../../collections/sub-Collection/SubCollection';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../../firebase/Firebase.Utils';\nimport { collectionsFromFirebaseDB } from '../../../redux/actions/shopActions';\nimport { dispatch } from '../../../../../../AppData/Local/Microsoft/TypeScript/3.6/node_modules/rxjs/internal/observable/range';\n\nconst ShopPage = ({\n  match,\n  updateCollections\n}) => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        unSubscribeFromSnabshot = _useState2[0],\n        setUnSubscribeFromSnabshot = _useState2[1];\n\n  useEffect(() => {\n    //fetch collection data from backend\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(snapShot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapShot);\n      console.log(collectionsMap);\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"shop-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"\".concat(match.path),\n    component: CollectionOverview,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"\".concat(match.path, \"/:collectionId\"),\n    component: SubCollection,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }));\n};\n\nconst mapDispatchToProps = state => {\n  updateCollections: collection => dispatch(collectionsFromFirebaseDB(collection));\n};\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:\\Users\\aidar\\Desktop\\e-commerce-site\\src\\components\\pages\\shop\\ShopPage.jsx"],"names":["React","useEffect","useState","Route","connect","CollectionOverview","SubCollection","firestore","convertCollectionsSnapshotToMap","collectionsFromFirebaseDB","dispatch","ShopPage","match","updateCollections","unSubscribeFromSnabshot","setUnSubscribeFromSnabshot","collectionRef","collection","onSnapshot","snapShot","collectionsMap","console","log","path","mapDispatchToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,kBAAP,MAA+B,0DAA/B;AACA,OAAOC,aAAP,MAA0B,gDAA1B;AAEA,SAAQC,SAAR,EAAmBC,+BAAnB,QAA0D,kCAA1D;AAEA,SAASC,yBAAT,QAA0C,oCAA1C;AACA,SAASC,QAAT,QAAyB,sGAAzB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAiC;AAAA,oBACcX,QAAQ,CAAC,IAAD,CADtB;AAAA;AAAA,QACzCY,uBADyC;AAAA,QAChBC,0BADgB;;AAGhDd,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMe,aAAa,GAAGT,SAAS,CAACU,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAAyBC,QAAQ,IAAI;AACnC,YAAMC,cAAc,GAAGZ,+BAA+B,CAACW,QAAD,CAAtD;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,cAAZ;AACD,KAHD;AAID,GARQ,EAQN,EARM,CAAT;AAUA,SACA;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,YAAKR,KAAK,CAACW,IAAX,CAAjB;AAAoC,IAAA,SAAS,EAAElB,kBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,YAAKO,KAAK,CAACW,IAAX,mBAAX;AAA4C,IAAA,SAAS,EAAEjB,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADA;AAMD,CAnBD;;AAqBA,MAAMkB,kBAAkB,GAAGC,KAAK,IAAI;AAClCZ,EAAAA,iBAAiB,EAAEI,UAAU,IAAIP,QAAQ,CAACD,yBAAyB,CAACQ,UAAD,CAA1B,CAAtB;AACpB,CAFD;;AAGA,eAAeb,OAAO,CAAC,IAAD,EAAOoB,kBAAP,CAAP,CAAkCb,QAAlC,CAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CollectionOverview from '../../collections/collection-overview/CollectionOverview';\r\nimport SubCollection from '../../collections/sub-Collection/SubCollection';\r\n\r\nimport {firestore, convertCollectionsSnapshotToMap } from '../../../firebase/Firebase.Utils'\r\n\r\nimport { collectionsFromFirebaseDB } from '../../../redux/actions/shopActions'\r\nimport { dispatch } from '../../../../../../AppData/Local/Microsoft/TypeScript/3.6/node_modules/rxjs/internal/observable/range';\r\n\r\nconst ShopPage = ({ match, updateCollections }) =>{\r\n  const [unSubscribeFromSnabshot, setUnSubscribeFromSnabshot] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    //fetch collection data from backend\r\n    const collectionRef = firestore.collection('collections');\r\n  \r\n    collectionRef.onSnapshot(snapShot => {\r\n      const collectionsMap = convertCollectionsSnapshotToMap(snapShot); \r\n      console.log(collectionsMap) ;\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n  <div className='shop-page'>\r\n    <Route exact path={`${match.path}`} component={CollectionOverview} />\r\n    <Route path={`${match.path}/:collectionId`} component={SubCollection} />\r\n  </div>\r\n);\r\n}\r\n\r\nconst mapDispatchToProps = state => {\r\n  updateCollections: collection => dispatch(collectionsFromFirebaseDB(collection))  \r\n}\r\nexport default connect(null, mapDispatchToProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}