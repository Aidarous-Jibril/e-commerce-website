{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\aidar\\\\Desktop\\\\e-commerce-site\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, call, all, put } from 'redux-saga/effects';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUserSession } from '../../firebase/Firebase.Utils'; //import this action seperately bcz yield put(fetchCollectionsStart) can't be called inside takeEvery\n\nimport { GOOGLE_SIGN_IN_START, EMAIL_SIGN_IN_START, CHECK_USER_SESSION, SIGN_OUT_START, SIGN_UP_START, SIGN_UP_SUCCESS, SIGN_UP_FAILURE } from '../actions/types';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './userActions'; //Sharing func which consize the code for signInWithGoogle/Email, isUserAuthenticated $ signUp functions\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n} //perform signInWithGoogle\n\nexport function* signInWithGoogle() {\n  try {\n    //destruct user from user object's data\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n} //Whole action ojbect catched with takeLatest passed into signWithEmailAndPassword, but pulling out email n password\n//perform signWithEmailAndPassword\n\nexport function* signInWithEmailAndPassword({\n  payload\n}) {\n  //pull out email, password from payload which is passed in from signIn comp form\n  const email = payload.email,\n        password = payload.password;\n\n  try {\n    //destruct user from user objects data\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n} //Perfoms user session persist\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUserSession();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n} //Perform Sign Out\n\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref3 = yield auth.createUserWithEmailAndPassword(email, password),\n          user = _ref3.user;\n\n    yield cal;\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n} // yield put(fetchCollectionsStart()); can't be called inside yield takeEvery\n//Listen GOOGLE_SIGN_IN_START Action\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(GOOGLE_SIGN_IN_START, signInWithGoogle);\n} //Listen EMAIL_SIGN_IN_START Action\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(EMAIL_SIGN_IN_START, signInWithEmailAndPassword);\n} //Listen CHECK_USER_SESSION ,  user session persist\n\nexport function* onCheckUserSession() {\n  yield takeLatest(CHECK_USER_SESSION, isUserAuthenticated);\n} //Listen SING_OUT_START Action\n\nexport function* onSignOut() {\n  yield takeLatest(SIGN_OUT_START, signOut);\n} //Listen SING_UP_START Action\n\nexport function* onSingUpStart() {\n  yield takeEvery(SIGN_UP_START, signUp);\n} //Combine All users sagas \n\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOut), call(onSingUpStart)]);\n}","map":{"version":3,"sources":["C:\\Users\\aidar\\Desktop\\e-commerce-site\\src\\redux\\user\\userSagas.js"],"names":["takeLatest","call","all","put","auth","googleProvider","createUserProfileDocument","getCurrentUserSession","GOOGLE_SIGN_IN_START","EMAIL_SIGN_IN_START","CHECK_USER_SESSION","SIGN_OUT_START","SIGN_UP_START","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","signInWithPopup","user","message","signInWithEmailAndPassword","payload","email","password","isUserAuthenticated","signOut","signUp","createUserWithEmailAndPassword","cal","onGoogleSignInStart","onEmailSignInStart","onCheckUserSession","onSignOut","onSingUpStart","takeEvery","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, call, all, put } from 'redux-saga/effects';\r\n\r\nimport {auth, googleProvider, createUserProfileDocument, getCurrentUserSession} from '../../firebase/Firebase.Utils';\r\n\r\n//import this action seperately bcz yield put(fetchCollectionsStart) can't be called inside takeEvery\r\nimport { \r\n    GOOGLE_SIGN_IN_START,\r\n    EMAIL_SIGN_IN_START,\r\n    CHECK_USER_SESSION,\r\n    SIGN_OUT_START,\r\n    SIGN_UP_START,\r\n    SIGN_UP_SUCCESS,\r\n    SIGN_UP_FAILURE\r\n} from '../actions/types';\r\n\r\n import {\r\n    signInSuccess,\r\n    signInFailure,\r\n    signOutSuccess,\r\n    signOutFailure,\r\n    signUpSuccess,\r\n    signUpFailure\r\n } from './userActions';\r\n\r\n\r\n //Sharing func which consize the code for signInWithGoogle/Email, isUserAuthenticated $ signUp functions\r\n  export function* getSnapshotFromUserAuth(userAuth) {\r\n    try {\r\n      const userRef = yield call( createUserProfileDocument, userAuth );\r\n      const userSnapshot = yield userRef.get();\r\n      yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n    } catch (error) {\r\n      yield put(signInFailure(error));\r\n    }\r\n  }\r\n  \r\n//perform signInWithGoogle\r\n export function* signInWithGoogle() {\r\n    try {\r\n        //destruct user from user object's data\r\n        const {user} = yield auth.signInWithPopup(googleProvider);\r\n        yield getSnapshotFromUserAuth(user);\r\n    } catch (error) {\r\n        yield put(signInFailure(error.message))\r\n    }\r\n }\r\n\r\n //Whole action ojbect catched with takeLatest passed into signWithEmailAndPassword, but pulling out email n password\r\n //perform signWithEmailAndPassword\r\n export function* signInWithEmailAndPassword({payload}){\r\n   //pull out email, password from payload which is passed in from signIn comp form\r\n    const { email, password} = payload\r\n    try {\r\n        //destruct user from user objects data\r\n        const {user} = yield auth.signInWithEmailAndPassword(email, password);\r\n        yield getSnapshotFromUserAuth(user);\r\n    } catch (error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\n\r\n\r\n//Perfoms user session persist\r\nexport function* isUserAuthenticated() {\r\n    try {\r\n      const userAuth = yield getCurrentUserSession();\r\n      if (!userAuth) return;\r\n      yield getSnapshotFromUserAuth(userAuth);\r\n    } catch (error) {\r\n      yield put(signInFailure(error));\r\n    }\r\n  }\r\n\r\n//Perform Sign Out\r\nexport function* signOut(){\r\n  try {\r\n    yield auth.signOut();\r\n    yield put(signOutSuccess())\r\n  } catch (error) {\r\n    yield put(signOutFailure(error))\r\n  }\r\n}\r\n\r\nexport function* signUp({payload: {email, password}}){\r\n  try {\r\n    const {user} = yield auth.createUserWithEmailAndPassword(email, password);\r\n    yield cal\r\n  } catch (error) {\r\n    yield put(signUpFailure(error))\r\n  }\r\n}\r\n\r\n\r\n// yield put(fetchCollectionsStart()); can't be called inside yield takeEvery\r\n//Listen GOOGLE_SIGN_IN_START Action\r\nexport function* onGoogleSignInStart(){\r\n    yield takeLatest( GOOGLE_SIGN_IN_START, signInWithGoogle )\r\n}\r\n\r\n//Listen EMAIL_SIGN_IN_START Action\r\nexport function* onEmailSignInStart(){\r\n    yield takeLatest(EMAIL_SIGN_IN_START, signInWithEmailAndPassword)\r\n}\r\n\r\n//Listen CHECK_USER_SESSION ,  user session persist\r\nexport function* onCheckUserSession(){\r\n    yield takeLatest(CHECK_USER_SESSION, isUserAuthenticated)\r\n}\r\n\r\n//Listen SING_OUT_START Action\r\nexport function* onSignOut(){\r\n  yield takeLatest(SIGN_OUT_START, signOut)\r\n}\r\n\r\n\r\n//Listen SING_UP_START Action\r\nexport function* onSingUpStart(){\r\n  yield takeEvery(SIGN_UP_START, signUp)\r\n}\r\n\r\n//Combine All users sagas \r\nexport function* userSagas(){\r\n    yield all([ \r\n      call(onGoogleSignInStart), \r\n      call(onEmailSignInStart), \r\n      call(isUserAuthenticated),\r\n      call(onSignOut),\r\n      call(onSingUpStart),\r\n   ])\r\n}"]},"metadata":{},"sourceType":"module"}