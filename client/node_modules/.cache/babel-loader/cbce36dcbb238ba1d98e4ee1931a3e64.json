{"ast":null,"code":"import { FETCH_COLLECTIONS_START, FETCH_COLLECTIONS_SUCCESS, FETCH_COLLECTIONS_FAILURE } from './types'; //WE USE REDUX THUNK MDDLEWARE FOR MULTPLE ACTIONS\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/Firebase.Utils'; //fetching success\n\nexport const fetchCollectionsSuccess = collectionsMap => {\n  return {\n    type: FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionsMap\n  };\n}; //fetching failed\n\nexport const fetchCollectionsFailure = error => {\n  return {\n    type: FETCH_COLLECTIONS_FAILURE,\n    payload: error\n  };\n};\n/*\r\n//fetch data from fb backend then dispatch multiple above Actions\r\nexport const fetchCollectionsStartAsync = () => {\r\n    return dispatch => {\r\n      const collectionRef = firestore.collection('collections');\r\n      dispatch(fetchCollectionsStart());\r\n      \r\n      collectionRef\r\n      .get()\r\n        .then(snapshot => {\r\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n          dispatch(fetchCollectionsSuccess(collectionsMap));\r\n        })\r\n        .catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n    };\r\n};\r\n*/\n\n/* MY FETCHING WAY in REDUX\r\nexport const fetchCollectionsStartAsync = () =>  dispatch => {\r\n    try {\r\n        dispatch(setLoading());\r\n        const collectionRef = firestore.collection('collections');\r\n    \r\n        collectionRef\r\n        .get()\r\n           .then (snapshot => {\r\n               const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n            dispatch({\r\n                type: FETCH_COLLECTIONS_SUCCESS,\r\n                payload: collectionsMap\r\n            })\r\n        })        \r\n    } catch (error) {\r\n        dispatch({\r\n            type: FETCH_COLLECTIONS_FAILURE,\r\n            payload: error.message\r\n        })\r\n    }        \r\n};\r\n\r\n// Set loading to true\r\nexport const setLoading = () => {\r\n    return {\r\n      type: FETCH_COLLECTIONS_START\r\n    };\r\n  };\r\n*/","map":{"version":3,"sources":["C:\\Users\\aidar\\Desktop\\e-commerce-site\\src\\redux\\actions\\shopActions.js"],"names":["FETCH_COLLECTIONS_START","FETCH_COLLECTIONS_SUCCESS","FETCH_COLLECTIONS_FAILURE","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","collectionsMap","type","payload","fetchCollectionsFailure","error"],"mappings":"AAAA,SACIA,uBADJ,EAEIC,yBAFJ,EAGIC,yBAHJ,QAIO,SAJP,C,CAOA;;AAEA,SAAQC,SAAR,EAAmBC,+BAAnB,QAA0D,+BAA1D,C,CAIE;;AACF,OAAO,MAAMC,uBAAuB,GAAGC,cAAc,IAAI;AACrD,SAAO;AACHC,IAAAA,IAAI,EAAEN,yBADH;AAEHO,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALM,C,CAOP;;AACA,OAAO,MAAMG,uBAAuB,GAAGC,KAAK,IAAI;AAC5C,SAAO;AACHH,IAAAA,IAAI,EAAEL,yBADH;AAEHM,IAAAA,OAAO,EAAEE;AAFN,GAAP;AAIH,CALM;AAMP;;;;;;;;;;;;;;;;;;AA2BA","sourcesContent":["import { \r\n    FETCH_COLLECTIONS_START, \r\n    FETCH_COLLECTIONS_SUCCESS, \r\n    FETCH_COLLECTIONS_FAILURE \r\n} from './types';\r\n\r\n\r\n//WE USE REDUX THUNK MDDLEWARE FOR MULTPLE ACTIONS\r\n\r\nimport {firestore, convertCollectionsSnapshotToMap } from '../../firebase/Firebase.Utils'\r\n\r\n\r\n\r\n  //fetching success\r\nexport const fetchCollectionsSuccess = collectionsMap => {\r\n    return {\r\n        type: FETCH_COLLECTIONS_SUCCESS,\r\n        payload: collectionsMap\r\n    }\r\n};\r\n\r\n//fetching failed\r\nexport const fetchCollectionsFailure = error => {\r\n    return {\r\n        type: FETCH_COLLECTIONS_FAILURE,\r\n        payload: error\r\n    }\r\n};\r\n/*\r\n//fetch data from fb backend then dispatch multiple above Actions\r\nexport const fetchCollectionsStartAsync = () => {\r\n    return dispatch => {\r\n      const collectionRef = firestore.collection('collections');\r\n      dispatch(fetchCollectionsStart());\r\n      \r\n      collectionRef\r\n      .get()\r\n        .then(snapshot => {\r\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n          dispatch(fetchCollectionsSuccess(collectionsMap));\r\n        })\r\n        .catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n    };\r\n};\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* MY FETCHING WAY in REDUX\r\nexport const fetchCollectionsStartAsync = () =>  dispatch => {\r\n    try {\r\n        dispatch(setLoading());\r\n        const collectionRef = firestore.collection('collections');\r\n    \r\n        collectionRef\r\n        .get()\r\n           .then (snapshot => {\r\n               const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n            dispatch({\r\n                type: FETCH_COLLECTIONS_SUCCESS,\r\n                payload: collectionsMap\r\n            })\r\n        })        \r\n    } catch (error) {\r\n        dispatch({\r\n            type: FETCH_COLLECTIONS_FAILURE,\r\n            payload: error.message\r\n        })\r\n    }        \r\n};\r\n\r\n// Set loading to true\r\nexport const setLoading = () => {\r\n    return {\r\n      type: FETCH_COLLECTIONS_START\r\n    };\r\n  };\r\n*/"]},"metadata":{},"sourceType":"module"}