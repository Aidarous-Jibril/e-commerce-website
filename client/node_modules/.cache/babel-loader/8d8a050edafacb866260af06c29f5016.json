{"ast":null,"code":"import { FETCH_COLLECTIONS_START, FETCH_COLLECTIONS_SUCCESS, FETCH_COLLECTIONS_FAILURE } from './types'; //WE USE REDUX THUNK MDDLEWARE IN THIS FILE\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/Firebase.Utils'; // Set loading to true\n\nexport const setLoading = () => {\n  return {\n    type: FETCH_COLLECTIONS_START\n  };\n}; //fetching success\n\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsStartAsync = () => async dispatch => {\n  try {\n    dispatch(setLoading());\n    const collectionRef = firestore.collection('collections');\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot); //dispatch(fetchCollectionsSuccess(collectionsMap));\n\n      dispatch({\n        type: FETCH_COLLECTIONS_SUCCESS,\n        payload: snapshot\n      });\n    });\n  } catch (error) {\n    dispatch({\n      type: FETCH_COLLECTIONS_FAILURE,\n      payload: error.message\n    });\n  } //  .catch(error => dispatch(fetchCollectionsFailure(error.message)));\n\n};\n/*\r\n  //fetching failed\r\nexport const fetchCollectionsFailure = error => ({\r\n    type: FETCH_COLLECTIONS_FAILURE,\r\n    payload: error\r\n})\r\n*/","map":{"version":3,"sources":["C:\\Users\\aidar\\Desktop\\e-commerce-site\\src\\redux\\actions\\shopActions.js"],"names":["FETCH_COLLECTIONS_START","FETCH_COLLECTIONS_SUCCESS","FETCH_COLLECTIONS_FAILURE","firestore","convertCollectionsSnapshotToMap","setLoading","type","fetchCollectionsSuccess","collectionsMap","payload","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","error","message"],"mappings":"AAAA,SACIA,uBADJ,EAEIC,yBAFJ,EAGIC,yBAHJ,QAIO,SAJP,C,CAMA;;AAEA,SAAQC,SAAR,EAAmBC,+BAAnB,QAA0D,+BAA1D,C,CAGA;;AACA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC5B,SAAO;AACHC,IAAAA,IAAI,EAAEN;AADH,GAAP;AAGD,CAJI,C,CAOP;;AACA,OAAO,MAAMO,uBAAuB,GAAGC,cAAc,KAAK;AAClDF,EAAAA,IAAI,EAAEL,yBAD4C;AAElDQ,EAAAA,OAAO,EAAED;AAFyC,CAAL,CAA9C;AAQP,OAAO,MAAME,0BAA0B,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC9D,MAAI;AACAA,IAAAA,QAAQ,CAACN,UAAU,EAAX,CAAR;AACA,UAAMO,aAAa,GAAGT,SAAS,CAACU,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChB,YAAMR,cAAc,GAAGJ,+BAA+B,CAACY,QAAD,CAAtD,CADgB,CAEhB;;AACAL,MAAAA,QAAQ,CAAC;AACLL,QAAAA,IAAI,EAAEL,yBADD;AAELQ,QAAAA,OAAO,EAAEO;AAFJ,OAAD,CAAR;AAID,KATH;AAUH,GAdD,CAcE,OAAOC,KAAP,EAAc;AACZN,IAAAA,QAAQ,CAAC;AACLL,MAAAA,IAAI,EAAEJ,yBADD;AAELO,MAAAA,OAAO,EAAEQ,KAAK,CAACC;AAFV,KAAD,CAAR;AAIH,GApB6D,CAsB5D;;AAEH,CAxBI;AA4BP","sourcesContent":["import { \r\n    FETCH_COLLECTIONS_START, \r\n    FETCH_COLLECTIONS_SUCCESS, \r\n    FETCH_COLLECTIONS_FAILURE \r\n} from './types';\r\n\r\n//WE USE REDUX THUNK MDDLEWARE IN THIS FILE\r\n\r\nimport {firestore, convertCollectionsSnapshotToMap } from '../../firebase/Firebase.Utils'\r\n\r\n\r\n// Set loading to true\r\nexport const setLoading = () => {\r\n    return {\r\n        type: FETCH_COLLECTIONS_START\r\n    };\r\n  };\r\n    \r\n\r\n//fetching success\r\nexport const fetchCollectionsSuccess = collectionsMap => ({\r\n        type: FETCH_COLLECTIONS_SUCCESS,\r\n        payload: collectionsMap\r\n});\r\n\r\n\r\n\r\n\r\nexport const fetchCollectionsStartAsync = () => async dispatch => {\r\n    try {\r\n        dispatch(setLoading());\r\n        const collectionRef = firestore.collection('collections');\r\n    \r\n        collectionRef\r\n          .get()\r\n          .then(snapshot => {\r\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n            //dispatch(fetchCollectionsSuccess(collectionsMap));\r\n            dispatch({\r\n                type: FETCH_COLLECTIONS_SUCCESS,\r\n                payload: snapshot\r\n            })\r\n          })        \r\n    } catch (error) {\r\n        dispatch({\r\n            type: FETCH_COLLECTIONS_FAILURE,\r\n            payload: error.message\r\n        })\r\n    }\r\n\r\n      //  .catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n\r\n  };\r\n\r\n\r\n\r\n/*\r\n  //fetching failed\r\nexport const fetchCollectionsFailure = error => ({\r\n    type: FETCH_COLLECTIONS_FAILURE,\r\n    payload: error\r\n})\r\n*/"]},"metadata":{},"sourceType":"module"}